name: BrainBytes Test

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Step 3: Cache frontend dependencies
      - name: Cache frontend dependencies
        uses: actions/cache@v3
        with:
          path: DevOps/brainbytes-multi-container/frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('DevOps/brainbytes-multi-container/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      # Step 4: Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: DevOps/brainbytes-multi-container/frontend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # Step 5: Run frontend tests
      - name: Run frontend tests
        working-directory: DevOps/brainbytes-multi-container/frontend
        run: |
          if [ -f package.json ]; then
            npm test || echo "Frontend tests failed"
          else
            echo "package.json not found in frontend, skipping tests"
          fi

      # Step 6: Cache backend dependencies
      - name: Cache backend dependencies
        uses: actions/cache@v3
        with:
          path: DevOps/brainbytes-multi-container/backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('DevOps/brainbytes-multi-container/backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      # Step 7: Install backend dependencies
      - name: Install backend dependencies
        working-directory: DevOps/brainbytes-multi-container/backend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # Step 8: Run backend tests
      - name: Run backend tests
        working-directory: DevOps/brainbytes-multi-container/backend
        run: |
          if [ -f package.json ]; then
            npm test || echo "Backend tests failed"
          else
            echo "package.json not found in backend, skipping tests"
          fi
